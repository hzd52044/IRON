<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\FM33A0XX_Tester.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\FM33A0XX_Tester.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Tue Jan 21 15:16:59 2020
<BR><P>
<H3>Maximum Stack Usage =        240 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Run_ADC &rArr; Test_ADC_ExVolt2 &rArr; ANAC_ADC_VoltageCalc2 &rArr; ANAC_ADC_VoltageCalc &rArr; __aeabi_ddiv
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[53]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[a]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SysTick_Handler</a><BR>
 <LI><a href="#[10]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[10]">ADC_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[1e]">AES_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[23]">BTIM1_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[24]">BTIM2_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[22]">COMP_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[20]">DMA_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[25]">ETIM1_IRQHandler</a> from interrupt.o(i.ETIM1_IRQHandler) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[26]">ETIM2_IRQHandler</a> from interrupt.o(i.ETIM2_IRQHandler) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[27]">ETIM3_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[28]">ETIM4_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[f]">FDET_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[29]">GPIO_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[11]">HSPI_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[1c]">I2C_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[1d]">LCD_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[1f]">LPTIM_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[e]">NVMIF_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[12]">SPI1_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[13]">SPI2_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[c]">SVD_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[2a]">SystemInit</a> from system_fm33a0xx.o(i.SystemInit) referenced from startup_fm33a0xx.o(.text)
 <LI><a href="#[21]">TRNG_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[1a]">U78160_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[1b]">U78161_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[14]">UART0_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[15]">UART1_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[16]">UART2_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[17]">UART3_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[18]">UART4_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[19]">UART5_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[b]">WWDT_IRQHandler</a> from startup_fm33a0xx.o(.text) referenced from startup_fm33a0xx.o(RESET)
 <LI><a href="#[2c]">__main</a> from __main.o(!!!main) referenced from startup_fm33a0xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2c]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2d]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2f]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[12d]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[12e]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[12f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[33]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[130]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[131]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[132]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[133]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[134]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[135]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[136]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[137]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[138]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[139]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[13a]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[13b]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[13c]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[13d]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[13e]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[13f]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[140]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[141]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[142]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[143]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[144]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[38]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[145]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[146]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[147]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[148]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[149]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[14a]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[14b]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[2e]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[14c]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[30]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[32]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[14d]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[34]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Run_ADC &rArr; Test_ADC_ExVolt2 &rArr; ANAC_ADC_VoltageCalc2 &rArr; ANAC_ADC_VoltageCalc &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[14e]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[55]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[37]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[14f]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[39]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>AES_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>BTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>BTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>ETIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>ETIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>FDET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>GPIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>HSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>I2C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>LPTIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>NVMIF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TRNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>U78160_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>U78161_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33a0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_fm33a0xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[3c]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[3b]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[150]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[f6]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLCDM
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Display
</UL>

<P><STRONG><a name="[151]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[152]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex2dec
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalcInt2
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalcInt
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_ADC
</UL>

<P><STRONG><a name="[153]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalcInt
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_TemperatureCalcInt
</UL>

<P><STRONG><a name="[154]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[155]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[156]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalc
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_TemperatureCalc
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_Temperature
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt
</UL>

<P><STRONG><a name="[157]"></a>_d2f</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, d2f.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalc
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_TemperatureCalc
</UL>

<P><STRONG><a name="[3f]"></a>_dadd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[6f]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_TemperatureCalcInt
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_TemperatureCalc
</UL>

<P><STRONG><a name="[42]"></a>_dsub</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[10b]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_ADC
</UL>

<P><STRONG><a name="[43]"></a>_drsb</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[79]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalc
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_Temperature
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_ADC
</UL>

<P><STRONG><a name="[45]"></a>_ddiv</STRONG> (Thumb, 1072 bytes, Stack size 64 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drdiv
</UL>

<P><STRONG><a name="[44]"></a>_drdiv</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_TemperatureCalcInt
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_ADC
</UL>

<P><STRONG><a name="[158]"></a>_dfixu</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, dfixui.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>__aeabi_i2d_normalise</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[46]"></a>__aeabi_i2d</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalc
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_TemperatureCalcInt
</UL>

<P><STRONG><a name="[159]"></a>_dflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[48]"></a>__aeabi_ui2d</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalc
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_TemperatureCalc
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_Temperature
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_ADC
</UL>

<P><STRONG><a name="[15a]"></a>_dfltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalc
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_TemperatureCalc
</UL>

<P><STRONG><a name="[15b]"></a>_dmul</STRONG> (Thumb, 558 bytes, Stack size 56 bytes, dmul.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalc
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_TemperatureCalc
</UL>

<P><STRONG><a name="[15c]"></a>_f2d</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, f2d.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 20 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalc2
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_TemperatureCalc
</UL>

<P><STRONG><a name="[4a]"></a>_fdiv</STRONG> (Thumb, 334 bytes, Stack size 20 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frdiv
</UL>

<P><STRONG><a name="[49]"></a>_frdiv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
</UL>

<P><STRONG><a name="[f9]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Display
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_ADC
</UL>

<P><STRONG><a name="[15d]"></a>_ffixu</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ffixui.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>__aeabi_i2f_normalise</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[4b]"></a>__aeabi_i2f</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_TemperatureCalc
</UL>

<P><STRONG><a name="[15e]"></a>_fflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>__aeabi_ui2f</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt
</UL>

<P><STRONG><a name="[15f]"></a>_ffltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>__fpl_fcmp_InfNaN</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, fcmpin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL>

<P><STRONG><a name="[4f]"></a>__fpl_cmpreturn</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, cmpret.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[50]"></a>__fpl_fcheck_NaN2</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, fnan2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[31]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[36]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[51]"></a>__fpl_return_NaN</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, retnan.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>

<P><STRONG><a name="[160]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[161]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[162]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[163]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[164]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[165]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[166]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>ADC_IO_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, adc.o(i.ADC_IO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ADC_IO_Init &rArr; AnalogIO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ANASEL_PC13ANS_Set
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ANASEL_PC12ANS_Set
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalogIO
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt
</UL>

<P><STRONG><a name="[5a]"></a>ADC_Init_TsetExVolt</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, adc.o(i.ADC_Init_TsetExVolt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC_Init_TsetExVolt &rArr; ANAC_ADC_Channel_SetEx &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PERCLKCON2_ADCCKSEL_Set
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_Channel_SetEx
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCCON_ADC_IE_Setable
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCCON_ADC_EN_Setable
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PERCLK_SetableEx
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt
</UL>

<P><STRONG><a name="[60]"></a>ADC_Init_TsetExVolt2</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, adc.o(i.ADC_Init_TsetExVolt2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC_Init_TsetExVolt2 &rArr; ANAC_ADC_Channel_SetEx &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PERCLKCON2_ADCCKSEL_Set
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_Channel_SetEx
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCCON_ADC_IE_Setable
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCCON_ADC_EN_Setable
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PERCLK_SetableEx
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt2
</UL>

<P><STRONG><a name="[61]"></a>ADC_Init_TsetTemperature</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, adc.o(i.ADC_Init_TsetTemperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC_Init_TsetTemperature &rArr; ANAC_ADC_Channel_SetEx &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PERCLKCON2_ADCCKSEL_Set
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_Channel_SetEx
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCCON_ADC_IE_Setable
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCCON_ADC_EN_Setable
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PERCLK_SetableEx
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_Temperature
</UL>

<P><STRONG><a name="[62]"></a>ADC_Wait_Finish</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, adc.o(i.ADC_Wait_Finish))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_Wait_Finish
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCIF_ADC_IF_Chk
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_Temperature
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt
</UL>

<P><STRONG><a name="[5f]"></a>ANAC_ADCCON_ADC_EN_Setable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fm33a0xx_anac.o(i.ANAC_ADCCON_ADC_EN_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init_TsetTemperature
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init_TsetExVolt2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init_TsetExVolt
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_Temperature
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt
</UL>

<P><STRONG><a name="[5e]"></a>ANAC_ADCCON_ADC_IE_Setable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fm33a0xx_anac.o(i.ANAC_ADCCON_ADC_IE_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init_TsetTemperature
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init_TsetExVolt2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init_TsetExVolt
</UL>

<P><STRONG><a name="[65]"></a>ANAC_ADCCON_ADC_VANA_EN_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fm33a0xx_anac.o(i.ANAC_ADCCON_ADC_VANA_EN_Set))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_Channel_SetEx
</UL>

<P><STRONG><a name="[11a]"></a>ANAC_ADCDATA_Read</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fm33a0xx_anac.o(i.ANAC_ADCDATA_Read))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_Temperature
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt
</UL>

<P><STRONG><a name="[63]"></a>ANAC_ADCIF_ADC_IF_Chk</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fm33a0xx_anac.o(i.ANAC_ADCIF_ADC_IF_Chk))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Wait_Finish
</UL>

<P><STRONG><a name="[119]"></a>ANAC_ADCIF_ADC_IF_Clr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fm33a0xx_anac.o(i.ANAC_ADCIF_ADC_IF_Clr))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_Temperature
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt
</UL>

<P><STRONG><a name="[67]"></a>ANAC_ADCINSEL_BUFBYP_Setable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fm33a0xx_anac.o(i.ANAC_ADCINSEL_BUFBYP_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_Channel_SetEx
</UL>

<P><STRONG><a name="[68]"></a>ANAC_ADCINSEL_BUFEN_Setable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fm33a0xx_anac.o(i.ANAC_ADCINSEL_BUFEN_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_Channel_SetEx
</UL>

<P><STRONG><a name="[69]"></a>ANAC_ADCINSEL_BUFSEL_Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, fm33a0xx_anac.o(i.ANAC_ADCINSEL_BUFSEL_Set))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_Channel_SetEx
</UL>

<P><STRONG><a name="[66]"></a>ANAC_ADCTRIM_Write</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fm33a0xx_anac.o(i.ANAC_ADCTRIM_Write))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_Channel_SetEx
</UL>

<P><STRONG><a name="[5d]"></a>ANAC_ADC_Channel_SetEx</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, fm33a0xx_anac.o(i.ANAC_ADC_Channel_SetEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ANAC_ADC_Channel_SetEx &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCTRIM_Write
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCINSEL_BUFSEL_Set
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCINSEL_BUFEN_Setable
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCINSEL_BUFBYP_Setable
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCCON_ADC_VANA_EN_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init_TsetTemperature
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init_TsetExVolt2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init_TsetExVolt
</UL>

<P><STRONG><a name="[6a]"></a>ANAC_ADC_TemperatureCalc</STRONG> (Thumb, 210 bytes, Stack size 72 bytes, fm33a0xx_anac.o(i.ANAC_ADC_TemperatureCalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ANAC_ADC_TemperatureCalc &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_Temperature
</UL>

<P><STRONG><a name="[74]"></a>ANAC_ADC_TemperatureCalcInt</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, fm33a0xx_anac.o(i.ANAC_ADC_TemperatureCalcInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ANAC_ADC_TemperatureCalcInt &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_Temperature
</UL>

<P><STRONG><a name="[77]"></a>ANAC_ADC_VoltageCalc</STRONG> (Thumb, 342 bytes, Stack size 64 bytes, fm33a0xx_anac.o(i.ANAC_ADC_VoltageCalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ANAC_ADC_VoltageCalc &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalc2
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt
</UL>

<P><STRONG><a name="[7a]"></a>ANAC_ADC_VoltageCalc2</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, fm33a0xx_anac.o(i.ANAC_ADC_VoltageCalc2))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ANAC_ADC_VoltageCalc2 &rArr; ANAC_ADC_VoltageCalc &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalc
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt
</UL>

<P><STRONG><a name="[7b]"></a>ANAC_ADC_VoltageCalcInt</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, fm33a0xx_anac.o(i.ANAC_ADC_VoltageCalcInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ANAC_ADC_VoltageCalcInt &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalcInt2
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt
</UL>

<P><STRONG><a name="[7d]"></a>ANAC_ADC_VoltageCalcInt2</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, fm33a0xx_anac.o(i.ANAC_ADC_VoltageCalcInt2))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ANAC_ADC_VoltageCalcInt2 &rArr; ANAC_ADC_VoltageCalcInt &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalcInt
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt
</UL>

<P><STRONG><a name="[e3]"></a>ANAC_BORCON_OFF_BOR_Setable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fm33a0xx_anac.o(i.ANAC_BORCON_OFF_BOR_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysClk_Gen
</UL>

<P><STRONG><a name="[e2]"></a>ANAC_PDRCON_PDREN_Setable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fm33a0xx_anac.o(i.ANAC_PDRCON_PDREN_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysClk_Gen
</UL>

<P><STRONG><a name="[7e]"></a>AltFunIO</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, user_init.o(i.AltFunIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = AltFunIO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Get_InitPara
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_AllIO_GPIO_80pin
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMER_DEMO_OUT_GPIO_init
</UL>

<P><STRONG><a name="[59]"></a>AnalogIO</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, user_init.o(i.AnalogIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = AnalogIO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Get_InitPara
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IO_Init
</UL>

<P><STRONG><a name="[81]"></a>BTIMER_DEMO_OUT_GPIO_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(i.BTIMER_DEMO_OUT_GPIO_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = BTIMER_DEMO_OUT_GPIO_init &rArr; AltFunIO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PERCLK_SetableEx
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AltFunIO
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMER_PWM_DEMO_init
</UL>

<P><STRONG><a name="[82]"></a>BTIMER_PWM_DEMO_init</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, main.o(i.BTIMER_PWM_DEMO_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = BTIMER_PWM_DEMO_init &rArr; BTIMER_DEMO_OUT_GPIO_init &rArr; AltFunIO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PERCLK_SetableEx
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMER_DEMO_OUT_GPIO_init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>BTIMER_PWM_DEMO_start</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(i.BTIMER_PWM_DEMO_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIMER_PWM_DEMO_start
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCR1_PWM_Setable
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCR1_CLEN_Setable
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCR1_CHEN_Setable
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_ADC
</UL>

<P><STRONG><a name="[92]"></a>BTIMx_BTCFG1_GRP1SEL_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fm33a0xx_btim.o(i.BTIMx_BTCFG1_GRP1SEL_Set))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[93]"></a>BTIMx_BTCFG1_GRP2SEL_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_btim.o(i.BTIMx_BTCFG1_GRP2SEL_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIMx_BTCFG1_GRP2SEL_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[8c]"></a>BTIMx_BTCFG1_RTCSEL1_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_btim.o(i.BTIMx_BTCFG1_RTCSEL1_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIMx_BTCFG1_RTCSEL1_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[8d]"></a>BTIMx_BTCFG1_RTCSEL2_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_btim.o(i.BTIMx_BTCFG1_RTCSEL2_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIMx_BTCFG1_RTCSEL2_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[90]"></a>BTIMx_BTCFG2_EXSEL1_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_btim.o(i.BTIMx_BTCFG2_EXSEL1_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIMx_BTCFG2_EXSEL1_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[91]"></a>BTIMx_BTCFG2_EXSEL2_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_btim.o(i.BTIMx_BTCFG2_EXSEL2_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIMx_BTCFG2_EXSEL2_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[8e]"></a>BTIMx_BTCFG2_INSEL1_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fm33a0xx_btim.o(i.BTIMx_BTCFG2_INSEL1_Set))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[8f]"></a>BTIMx_BTCFG2_INSEL2_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_btim.o(i.BTIMx_BTCFG2_INSEL2_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIMx_BTCFG2_INSEL2_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[8a]"></a>BTIMx_BTCR1_CAPCLR_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_btim.o(i.BTIMx_BTCR1_CAPCLR_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIMx_BTCR1_CAPCLR_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[89]"></a>BTIMx_BTCR1_CAPMOD_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_btim.o(i.BTIMx_BTCR1_CAPMOD_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIMx_BTCR1_CAPMOD_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[8b]"></a>BTIMx_BTCR1_CAPONCE_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_btim.o(i.BTIMx_BTCR1_CAPONCE_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIMx_BTCR1_CAPONCE_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[86]"></a>BTIMx_BTCR1_CHEN_Setable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fm33a0xx_btim.o(i.BTIMx_BTCR1_CHEN_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMER_PWM_DEMO_start
</UL>

<P><STRONG><a name="[87]"></a>BTIMx_BTCR1_CLEN_Setable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fm33a0xx_btim.o(i.BTIMx_BTCR1_CLEN_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMER_PWM_DEMO_start
</UL>

<P><STRONG><a name="[9b]"></a>BTIMx_BTCR1_EDGESEL_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_btim.o(i.BTIMx_BTCR1_EDGESEL_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIMx_BTCR1_EDGESEL_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[9a]"></a>BTIMx_BTCR1_MODE_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_btim.o(i.BTIMx_BTCR1_MODE_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIMx_BTCR1_MODE_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[85]"></a>BTIMx_BTCR1_PWM_Setable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fm33a0xx_btim.o(i.BTIMx_BTCR1_PWM_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMER_PWM_DEMO_start
</UL>

<P><STRONG><a name="[96]"></a>BTIMx_BTCR2_CNTHSEL_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_btim.o(i.BTIMx_BTCR2_CNTHSEL_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIMx_BTCR2_CNTHSEL_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[98]"></a>BTIMx_BTCR2_DIREN_Setable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fm33a0xx_btim.o(i.BTIMx_BTCR2_DIREN_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[99]"></a>BTIMx_BTCR2_DIRPO_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fm33a0xx_btim.o(i.BTIMx_BTCR2_DIRPO_Set))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[95]"></a>BTIMx_BTCR2_SIG1SEL_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_btim.o(i.BTIMx_BTCR2_SIG1SEL_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIMx_BTCR2_SIG1SEL_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[94]"></a>BTIMx_BTCR2_SIG2SEL_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_btim.o(i.BTIMx_BTCR2_SIG2SEL_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIMx_BTCR2_SIG2SEL_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[97]"></a>BTIMx_BTCR2_SRCSEL_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_btim.o(i.BTIMx_BTCR2_SRCSEL_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIMx_BTCR2_SRCSEL_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[9f]"></a>BTIMx_BTLOADH_Write</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fm33a0xx_btim.o(i.BTIMx_BTLOADH_Write))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[a0]"></a>BTIMx_BTLOADL_Write</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fm33a0xx_btim.o(i.BTIMx_BTLOADL_Write))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[a4]"></a>BTIMx_BTOCR_OUTINV_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_btim.o(i.BTIMx_BTOCR_OUTINV_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIMx_BTOCR_OUTINV_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[a1]"></a>BTIMx_BTOCR_OUTMOD_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_btim.o(i.BTIMx_BTOCR_OUTMOD_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIMx_BTOCR_OUTMOD_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[a2]"></a>BTIMx_BTOCR_OUTSEL_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fm33a0xx_btim.o(i.BTIMx_BTOCR_OUTSEL_Set))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[a3]"></a>BTIMx_BTOUTCNT_Write</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fm33a0xx_btim.o(i.BTIMx_BTOUTCNT_Write))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[9d]"></a>BTIMx_BTPRESET_PRESETH_Set</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, fm33a0xx_btim.o(i.BTIMx_BTPRESET_PRESETH_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIMx_BTPRESET_PRESETH_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[9e]"></a>BTIMx_BTPRESET_PRESETL_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fm33a0xx_btim.o(i.BTIMx_BTPRESET_PRESETL_Set))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[9c]"></a>BTIMx_BTPRES_Write</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fm33a0xx_btim.o(i.BTIMx_BTPRES_Write))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[88]"></a>BTIMx_Deinit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fm33a0xx_btim.o(i.BTIMx_Deinit))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
</UL>

<P><STRONG><a name="[83]"></a>BTIMx_Init</STRONG> (Thumb, 240 bytes, Stack size 12 bytes, fm33a0xx_btim.o(i.BTIMx_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BTIMx_Init &rArr; BTIMx_BTPRESET_PRESETH_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Deinit
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTPRES_Write
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTPRESET_PRESETL_Set
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTPRESET_PRESETH_Set
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTOUTCNT_Write
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTOCR_OUTSEL_Set
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTOCR_OUTMOD_Set
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTOCR_OUTINV_Set
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTLOADL_Write
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTLOADH_Write
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCR2_SRCSEL_Set
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCR2_SIG2SEL_Set
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCR2_SIG1SEL_Set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCR2_DIRPO_Set
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCR2_DIREN_Setable
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCR2_CNTHSEL_Set
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCR1_MODE_Set
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCR1_EDGESEL_Set
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCR1_CAPONCE_Set
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCR1_CAPMOD_Set
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCR1_CAPCLR_Set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCFG2_INSEL2_Set
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCFG2_INSEL1_Set
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCFG2_EXSEL2_Set
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCFG2_EXSEL1_Set
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCFG1_RTCSEL2_Set
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCFG1_RTCSEL1_Set
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCFG1_GRP2SEL_Set
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_BTCFG1_GRP1SEL_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_ADC
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMER_PWM_DEMO_init
</UL>

<P><STRONG><a name="[a6]"></a>CheckSysReg</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, user_init.o(i.CheckSysReg))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_AllIOEXTI
</UL>

<P><STRONG><a name="[a5]"></a>Close_AllIOEXTI</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, user_init.o(i.Close_AllIOEXTI))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Close_AllIOEXTI
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSysReg
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_AllIO_GPIO_80pin
</UL>

<P><STRONG><a name="[a7]"></a>Close_AllIO_GPIO_80pin</STRONG> (Thumb, 792 bytes, Stack size 8 bytes, user_init.o(i.Close_AllIO_GPIO_80pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Close_AllIO_GPIO_80pin &rArr; CloseeIO &rArr; OutputIO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_HDSEL_PG6HDEN_Setable
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_HDSEL_PE2HDEN_Setable
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_FOUTSEL_FOUTSEL_Set
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_WKENFunSet
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_DFFunSet
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_AnalogFunSet
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseeIO
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_AllIOEXTI
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AltFunIO
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_System
</UL>

<P><STRONG><a name="[af]"></a>Close_None_GPIO_80pin</STRONG> (Thumb, 450 bytes, Stack size 8 bytes, user_init.o(i.Close_None_GPIO_80pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Close_None_GPIO_80pin &rArr; CloseeIO &rArr; OutputIO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseeIO
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_System
</UL>

<P><STRONG><a name="[ae]"></a>CloseeIO</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, user_init.o(i.CloseeIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = CloseeIO &rArr; OutputIO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Get_InitPara
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputIO
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_None_GPIO_80pin
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_AllIO_GPIO_80pin
</UL>

<P><STRONG><a name="[25]"></a>ETIM1_IRQHandler</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, interrupt.o(i.ETIM1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ETIM1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxIF_OVIF_Clr
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxIF_OVIF_Chk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>ETIM2_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, interrupt.o(i.ETIM2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(RESET)
</UL>
<P><STRONG><a name="[c5]"></a>ETIMx_ETxCMP_Write</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fm33a0xx_etim.o(i.ETIMx_ETxCMP_Write))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
</UL>

<P><STRONG><a name="[c1]"></a>ETIMx_ETxCR_CAPCLR_Setable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fm33a0xx_etim.o(i.ETIMx_ETxCR_CAPCLR_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
</UL>

<P><STRONG><a name="[c3]"></a>ETIMx_ETxCR_CAPEDGE_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fm33a0xx_etim.o(i.ETIMx_ETxCR_CAPEDGE_Set))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
</UL>

<P><STRONG><a name="[c0]"></a>ETIMx_ETxCR_CAPMOD_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_etim.o(i.ETIMx_ETxCR_CAPMOD_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ETIMx_ETxCR_CAPMOD_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
</UL>

<P><STRONG><a name="[c2]"></a>ETIMx_ETxCR_CAPONCE_Setable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fm33a0xx_etim.o(i.ETIMx_ETxCR_CAPONCE_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
</UL>

<P><STRONG><a name="[bd]"></a>ETIMx_ETxCR_CASEN_Setable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fm33a0xx_etim.o(i.ETIMx_ETxCR_CASEN_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
</UL>

<P><STRONG><a name="[c9]"></a>ETIMx_ETxCR_CEN_Setable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fm33a0xx_etim.o(i.ETIMx_ETxCR_CEN_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Etimx
</UL>

<P><STRONG><a name="[be]"></a>ETIMx_ETxCR_EDGESEL_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_etim.o(i.ETIMx_ETxCR_EDGESEL_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ETIMx_ETxCR_EDGESEL_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
</UL>

<P><STRONG><a name="[bb]"></a>ETIMx_ETxCR_EXFLT_Setable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fm33a0xx_etim.o(i.ETIMx_ETxCR_EXFLT_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
</UL>

<P><STRONG><a name="[bc]"></a>ETIMx_ETxCR_MOD_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_etim.o(i.ETIMx_ETxCR_MOD_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ETIMx_ETxCR_MOD_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
</UL>

<P><STRONG><a name="[bf]"></a>ETIMx_ETxCR_PWM_Setable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fm33a0xx_etim.o(i.ETIMx_ETxCR_PWM_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
</UL>

<P><STRONG><a name="[c7]"></a>ETIMx_ETxIE_CAPIE_Setable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fm33a0xx_etim.o(i.ETIMx_ETxIE_CAPIE_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
</UL>

<P><STRONG><a name="[c6]"></a>ETIMx_ETxIE_CMPIE_Setable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fm33a0xx_etim.o(i.ETIMx_ETxIE_CMPIE_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
</UL>

<P><STRONG><a name="[c8]"></a>ETIMx_ETxIE_OVIE_Setable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fm33a0xx_etim.o(i.ETIMx_ETxIE_OVIE_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
</UL>

<P><STRONG><a name="[b2]"></a>ETIMx_ETxIF_OVIF_Chk</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fm33a0xx_etim.o(i.ETIMx_ETxIF_OVIF_Chk))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIM1_IRQHandler
</UL>

<P><STRONG><a name="[b3]"></a>ETIMx_ETxIF_OVIF_Clr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fm33a0xx_etim.o(i.ETIMx_ETxIF_OVIF_Clr))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIM1_IRQHandler
</UL>

<P><STRONG><a name="[b7]"></a>ETIMx_ETxINSEL_GRP1SEL_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fm33a0xx_etim.o(i.ETIMx_ETxINSEL_GRP1SEL_Set))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
</UL>

<P><STRONG><a name="[b8]"></a>ETIMx_ETxINSEL_GRP2SEL_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_etim.o(i.ETIMx_ETxINSEL_GRP2SEL_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ETIMx_ETxINSEL_GRP2SEL_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
</UL>

<P><STRONG><a name="[b5]"></a>ETIMx_ETxINSEL_SIG1SEL_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_etim.o(i.ETIMx_ETxINSEL_SIG1SEL_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ETIMx_ETxINSEL_SIG1SEL_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
</UL>

<P><STRONG><a name="[b6]"></a>ETIMx_ETxINSEL_SIG2SEL_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm33a0xx_etim.o(i.ETIMx_ETxINSEL_SIG2SEL_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ETIMx_ETxINSEL_SIG2SEL_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
</UL>

<P><STRONG><a name="[c4]"></a>ETIMx_ETxIVR_Write</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fm33a0xx_etim.o(i.ETIMx_ETxIVR_Write))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
</UL>

<P><STRONG><a name="[b9]"></a>ETIMx_ETxPESCALE1_Write</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fm33a0xx_etim.o(i.ETIMx_ETxPESCALE1_Write))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
</UL>

<P><STRONG><a name="[ba]"></a>ETIMx_ETxPESCALE2_Write</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fm33a0xx_etim.o(i.ETIMx_ETxPESCALE2_Write))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
</UL>

<P><STRONG><a name="[b4]"></a>ETIMx_Init</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, fm33a0xx_etim.o(i.ETIMx_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ETIMx_Init &rArr; ETIMx_ETxINSEL_SIG2SEL_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxCR_CEN_Setable
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxPESCALE2_Write
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxPESCALE1_Write
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxIVR_Write
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxINSEL_SIG2SEL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxINSEL_SIG1SEL_Set
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxINSEL_GRP2SEL_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxINSEL_GRP1SEL_Set
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxIE_OVIE_Setable
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxIE_CMPIE_Setable
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxIE_CAPIE_Setable
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxCR_PWM_Setable
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxCR_MOD_Set
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxCR_EXFLT_Setable
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxCR_EDGESEL_Set
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxCR_CASEN_Setable
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxCR_CAPONCE_Setable
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxCR_CAPMOD_Set
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxCR_CAPEDGE_Set
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxCR_CAPCLR_Setable
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxCMP_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Etimx
</UL>

<P><STRONG><a name="[e0]"></a>FLASH_FLSRDCON_WAIT_Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, fm33a0xx_flash.o(i.FLASH_FLSRDCON_WAIT_Set))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysClk_Gen
</UL>

<P><STRONG><a name="[58]"></a>GPIO_ANASEL_PC12ANS_Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, fm33a0xx_gpio.o(i.GPIO_ANASEL_PC12ANS_Set))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IO_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_AnalogFunSet
</UL>

<P><STRONG><a name="[57]"></a>GPIO_ANASEL_PC13ANS_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fm33a0xx_gpio.o(i.GPIO_ANASEL_PC13ANS_Set))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IO_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_AnalogFunSet
</UL>

<P><STRONG><a name="[cd]"></a>GPIO_ANASEL_PC14ANS_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fm33a0xx_gpio.o(i.GPIO_ANASEL_PC14ANS_Set))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_AnalogFunSet
</UL>

<P><STRONG><a name="[cc]"></a>GPIO_ANASEL_PC15ANS_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fm33a0xx_gpio.o(i.GPIO_ANASEL_PC15ANS_Set))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_AnalogFunSet
</UL>

<P><STRONG><a name="[cb]"></a>GPIO_ANASEL_PE3ANS_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fm33a0xx_gpio.o(i.GPIO_ANASEL_PE3ANS_Set))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_AnalogFunSet
</UL>

<P><STRONG><a name="[ca]"></a>GPIO_ANASEL_PE4ANS_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fm33a0xx_gpio.o(i.GPIO_ANASEL_PE4ANS_Set))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_AnalogFunSet
</UL>

<P><STRONG><a name="[aa]"></a>GPIO_FOUTSEL_FOUTSEL_Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, fm33a0xx_gpio.o(i.GPIO_FOUTSEL_FOUTSEL_Set))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_AllIO_GPIO_80pin
</UL>

<P><STRONG><a name="[7f]"></a>GPIO_Get_InitPara</STRONG> (Thumb, 148 bytes, Stack size 20 bytes, fm33a0xx_gpio.o(i.GPIO_Get_InitPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Get_InitPara
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputIO
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseeIO
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalogIO
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputtIO
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AltFunIO
</UL>

<P><STRONG><a name="[a8]"></a>GPIO_HDSEL_PE2HDEN_Setable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fm33a0xx_gpio.o(i.GPIO_HDSEL_PE2HDEN_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_AllIO_GPIO_80pin
</UL>

<P><STRONG><a name="[a9]"></a>GPIO_HDSEL_PG6HDEN_Setable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fm33a0xx_gpio.o(i.GPIO_HDSEL_PG6HDEN_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_AllIO_GPIO_80pin
</UL>

<P><STRONG><a name="[ce]"></a>GPIO_IODF_SetableEx</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, fm33a0xx_gpio.o(i.GPIO_IODF_SetableEx))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_DFFunSet
</UL>

<P><STRONG><a name="[80]"></a>GPIO_Init</STRONG> (Thumb, 114 bytes, Stack size 20 bytes, fm33a0xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputIO
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalogIO
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputtIO
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AltFunIO
</UL>

<P><STRONG><a name="[cf]"></a>GPIO_PINWKEN_SetableEx</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fm33a0xx_gpio.o(i.GPIO_PINWKEN_SetableEx))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_WKENFunSet
</UL>

<P><STRONG><a name="[10e]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fm33a0xx_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_KEY
</UL>

<P><STRONG><a name="[d5]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fm33a0xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdData
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCmd
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_IO
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLCDM
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_ADC
</UL>

<P><STRONG><a name="[b0]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fm33a0xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdData
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCmd
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_IO
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseeIO
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLCDM
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_ADC
</UL>

<P><STRONG><a name="[110]"></a>GPIO_ToggleBits</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fm33a0xx_gpio.o(i.GPIO_ToggleBits))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_LED
</UL>

<P><STRONG><a name="[da]"></a>GPIOx_DO_Write</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fm33a0xx_gpio.o(i.GPIOx_DO_Write))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Pad_Io
</UL>

<P><STRONG><a name="[ab]"></a>IO_AnalogFunSet</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, user_init.o(i.IO_AnalogFunSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IO_AnalogFunSet
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ANASEL_PE4ANS_Set
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ANASEL_PE3ANS_Set
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ANASEL_PC15ANS_Set
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ANASEL_PC14ANS_Set
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ANASEL_PC13ANS_Set
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ANASEL_PC12ANS_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_AllIO_GPIO_80pin
</UL>

<P><STRONG><a name="[ac]"></a>IO_DFFunSet</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, user_init.o(i.IO_DFFunSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IO_DFFunSet
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_IODF_SetableEx
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_AllIO_GPIO_80pin
</UL>

<P><STRONG><a name="[ad]"></a>IO_WKENFunSet</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, user_init.o(i.IO_WKENFunSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IO_WKENFunSet
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PINWKEN_SetableEx
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_AllIO_GPIO_80pin
</UL>

<P><STRONG><a name="[d1]"></a>IWDT_Clr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fm33a0xx_iwdt.o(i.IWDT_Clr))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_Init
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLCDM
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_System
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d2]"></a>IWDT_IWDTCFG_IWDTOVP_Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, fm33a0xx_iwdt.o(i.IWDT_IWDTCFG_IWDTOVP_Set))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_Init
</UL>

<P><STRONG><a name="[d3]"></a>IWDT_IWDTCFG_IWDTSLP4096S_Setable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fm33a0xx_iwdt.o(i.IWDT_IWDTCFG_IWDTSLP4096S_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_Init
</UL>

<P><STRONG><a name="[d0]"></a>IWDT_Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, user_init.o(i.IWDT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = IWDT_Init &rArr; RCC_PERCLK_SetableEx
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_IWDTCFG_IWDTSLP4096S_Setable
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_IWDTCFG_IWDTOVP_Set
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PERCLK_SetableEx
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_Clr
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_System
</UL>

<P><STRONG><a name="[d4]"></a>Init_IO</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, user_init.o(i.Init_IO))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Init_IO &rArr; OutputIO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputIO
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_System
</UL>

<P><STRONG><a name="[d6]"></a>Init_PLL</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, user_init.o(i.Init_PLL))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Init_PLL &rArr; RCC_PLL_Init &rArr; RCC_PLLDB_WriteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCON_PLLEN_Setable
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysClk_Gen
</UL>

<P><STRONG><a name="[d9]"></a>Init_Pad_Io</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, user_init.o(i.Init_Pad_Io))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Init_Pad_Io
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_DO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_System
</UL>

<P><STRONG><a name="[db]"></a>Init_RCC_PERIPH_clk</STRONG> (Thumb, 390 bytes, Stack size 8 bytes, user_init.o(i.Init_RCC_PERIPH_clk))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Init_RCC_PERIPH_clk &rArr; RCC_PERCLK_SetableEx
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PERCLK_SetableEx
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysClk_Gen
</UL>

<P><STRONG><a name="[dc]"></a>Init_SysClk</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, user_init.o(i.Init_SysClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Init_SysClk &rArr; RCC_SysClk_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SysClk_Init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RCHF_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysClk_Gen
</UL>

<P><STRONG><a name="[df]"></a>Init_SysClk_Gen</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, user_init.o(i.Init_SysClk_Gen))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Init_SysClk_Gen &rArr; Init_SysClk &rArr; RCC_SysClk_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_MPRIL_MPRIL_Set
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_FLSRDCON_WAIT_Set
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_PDRCON_PDREN_Setable
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_BORCON_OFF_BOR_Setable
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_Init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysClk
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RCC_PERIPH_clk
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PLL
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_System
</UL>

<P><STRONG><a name="[e5]"></a>Init_SysTick</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, user_init.o(i.Init_SysTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Init_SysTick &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_System
</UL>

<P><STRONG><a name="[e7]"></a>Init_System</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, user_init.o(i.Init_System))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Init_System &rArr; Close_None_GPIO_80pin &rArr; CloseeIO &rArr; OutputIO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Init_RCHF_Trim
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysTick
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysClk_Gen
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Pad_Io
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_IO
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_Init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_None_GPIO_80pin
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_AllIO_GPIO_80pin
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TicksDelayMs
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_Clr
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ea]"></a>InputtIO</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, user_init.o(i.InputtIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = InputtIO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Get_InitPara
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_GPIO_InPut
</UL>

<P><STRONG><a name="[eb]"></a>LCD_Fulldisplay</STRONG> (Thumb, 404 bytes, Stack size 8 bytes, disp.o(i.LCD_Fulldisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_Fulldisplay &rArr; show_china12 &rArr; Lprint_hz12
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_china14
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_china12
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_asc36
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSymbol
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPic
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f1]"></a>LCD_clear</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, disp.o(i.LCD_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_clear &rArr; SdData
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdData
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Display
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fulldisplay
</UL>

<P><STRONG><a name="[f4]"></a>LCD_on</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, disp.o(i.LCD_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_on &rArr; SdCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f5]"></a>Lcd_Display</STRONG> (Thumb, 804 bytes, Stack size 16 bytes, disp.o(i.Lcd_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Lcd_Display &rArr; dis_asc36 &rArr; show_asc36
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_china14
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_asc36
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bcd_to_hex
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPic
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_DISPLAY
</UL>

<P><STRONG><a name="[ef]"></a>LoadPic</STRONG> (Thumb, 150 bytes, Stack size 44 bytes, disp.o(i.LoadPic))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LoadPic
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Display
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fulldisplay
</UL>

<P><STRONG><a name="[f0]"></a>LoadSymbol</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, disp.o(i.LoadSymbol))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LoadSymbol
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fulldisplay
</UL>

<P><STRONG><a name="[125]"></a>Lprint_hz12</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, disp.o(i.Lprint_hz12))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Lprint_hz12
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_china12
</UL>

<P><STRONG><a name="[127]"></a>Lprint_hz14</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, disp.o(i.Lprint_hz14))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Lprint_hz14
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_china14
</UL>

<P><STRONG><a name="[b1]"></a>OutputIO</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, user_init.o(i.OutputIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = OutputIO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Get_InitPara
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_IO
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseeIO
</UL>

<P><STRONG><a name="[e9]"></a>RCC_Init_RCHF_Trim</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, fm33a0xx_rcc.o(i.RCC_Init_RCHF_Trim))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_Init_RCHF_Trim
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RCHFTRIM_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_System
</UL>

<P><STRONG><a name="[e1]"></a>RCC_MPRIL_MPRIL_Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, fm33a0xx_rcc.o(i.RCC_MPRIL_MPRIL_Set))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysClk_Gen
</UL>

<P><STRONG><a name="[5c]"></a>RCC_PERCLKCON2_ADCCKSEL_Set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fm33a0xx_rcc.o(i.RCC_PERCLKCON2_ADCCKSEL_Set))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init_TsetTemperature
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init_TsetExVolt2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init_TsetExVolt
</UL>

<P><STRONG><a name="[5b]"></a>RCC_PERCLK_SetableEx</STRONG> (Thumb, 100 bytes, Stack size 12 bytes, fm33a0xx_rcc.o(i.RCC_PERCLK_SetableEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_PERCLK_SetableEx
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init_TsetTemperature
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init_TsetExVolt2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init_TsetExVolt
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RCC_PERIPH_clk
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_Init
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_GPIO_InPut
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Etimx
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMER_PWM_DEMO_init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMER_DEMO_OUT_GPIO_init
</UL>

<P><STRONG><a name="[fc]"></a>RCC_PLLCON_PLLDB_Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, fm33a0xx_rcc.o(i.RCC_PLLCON_PLLDB_Set))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLDB_WriteEx
</UL>

<P><STRONG><a name="[d8]"></a>RCC_PLLCON_PLLEN_Setable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fm33a0xx_rcc.o(i.RCC_PLLCON_PLLEN_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_Init
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PLL
</UL>

<P><STRONG><a name="[fe]"></a>RCC_PLLCON_PLLINSEL_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fm33a0xx_rcc.o(i.RCC_PLLCON_PLLINSEL_Set))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_Init
</UL>

<P><STRONG><a name="[fd]"></a>RCC_PLLCON_PLLOSEL_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fm33a0xx_rcc.o(i.RCC_PLLCON_PLLOSEL_Set))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_Init
</UL>

<P><STRONG><a name="[fb]"></a>RCC_PLLDB_WriteEx</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, fm33a0xx_rcc.o(i.RCC_PLLDB_WriteEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RCC_PLLDB_WriteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCON_PLLDB_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_Init
</UL>

<P><STRONG><a name="[d7]"></a>RCC_PLL_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, fm33a0xx_rcc.o(i.RCC_PLL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_PLL_Init &rArr; RCC_PLLDB_WriteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCON_PLLEN_Setable
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLDB_WriteEx
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCON_PLLOSEL_Set
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCON_PLLINSEL_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PLL
</UL>

<P><STRONG><a name="[ff]"></a>RCC_RCHFCON_FSEL_Set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fm33a0xx_rcc.o(i.RCC_RCHFCON_FSEL_Set))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RCHF_Init
</UL>

<P><STRONG><a name="[100]"></a>RCC_RCHFCON_RCHFEN_Setable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fm33a0xx_rcc.o(i.RCC_RCHFCON_RCHFEN_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RCHF_Init
</UL>

<P><STRONG><a name="[fa]"></a>RCC_RCHFTRIM_Write</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fm33a0xx_rcc.o(i.RCC_RCHFTRIM_Write))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Init_RCHF_Trim
</UL>

<P><STRONG><a name="[dd]"></a>RCC_RCHF_Init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, fm33a0xx_rcc.o(i.RCC_RCHF_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_RCHF_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RCHFCON_RCHFEN_Setable
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RCHFCON_FSEL_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysClk
</UL>

<P><STRONG><a name="[102]"></a>RCC_SYSCLKSEL_AHBPRES_Set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fm33a0xx_rcc.o(i.RCC_SYSCLKSEL_AHBPRES_Set))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SysClk_Init
</UL>

<P><STRONG><a name="[103]"></a>RCC_SYSCLKSEL_APBPRES_Set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fm33a0xx_rcc.o(i.RCC_SYSCLKSEL_APBPRES_Set))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SysClk_Init
</UL>

<P><STRONG><a name="[104]"></a>RCC_SYSCLKSEL_EXTICKSEL_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fm33a0xx_rcc.o(i.RCC_SYSCLKSEL_EXTICKSEL_Set))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SysClk_Init
</UL>

<P><STRONG><a name="[106]"></a>RCC_SYSCLKSEL_LPM_RCLP_OFF_Setable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fm33a0xx_rcc.o(i.RCC_SYSCLKSEL_LPM_RCLP_OFF_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SysClk_Init
</UL>

<P><STRONG><a name="[105]"></a>RCC_SYSCLKSEL_SLP_ENEXTI_Setable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, fm33a0xx_rcc.o(i.RCC_SYSCLKSEL_SLP_ENEXTI_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SysClk_Init
</UL>

<P><STRONG><a name="[101]"></a>RCC_SYSCLKSEL_SYSCLKSEL_Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, fm33a0xx_rcc.o(i.RCC_SYSCLKSEL_SYSCLKSEL_Set))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SysClk_Init
</UL>

<P><STRONG><a name="[de]"></a>RCC_SysClk_Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, fm33a0xx_rcc.o(i.RCC_SysClk_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_SysClk_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKSEL_SYSCLKSEL_Set
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKSEL_SLP_ENEXTI_Setable
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKSEL_LPM_RCLP_OFF_Setable
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKSEL_EXTICKSEL_Set
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKSEL_APBPRES_Set
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKSEL_AHBPRES_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysClk
</UL>

<P><STRONG><a name="[107]"></a>Run_ADC</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, main.o(i.Run_ADC))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Run_ADC &rArr; Test_ADC_ExVolt2 &rArr; ANAC_ADC_VoltageCalc2 &rArr; ANAC_ADC_VoltageCalc &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_Temperature
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMx_Init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMER_PWM_DEMO_start
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10c]"></a>Run_DISPLAY</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(i.Run_DISPLAY))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Run_DISPLAY &rArr; Lcd_Display &rArr; dis_asc36 &rArr; show_asc36
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Display
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10d]"></a>Run_KEY</STRONG> (Thumb, 276 bytes, Stack size 16 bytes, main.o(i.Run_KEY))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Run_KEY &rArr; TicksDelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TicksDelayMs
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10f]"></a>Run_LED</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main.o(i.Run_LED))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Run_LED
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ToggleBits
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4]"></a>SCU_Init</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, user_init.o(i.SCU_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCU_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_MCUDBGCR_DBG_WWDT_STOP_Setable
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_MCUDBGCR_DBG_IWDT_STOP_Setable
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_MCUDBGCR_DBG_ET4_STOP_Setable
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_MCUDBGCR_DBG_ET3_STOP_Setable
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_MCUDBGCR_DBG_ET2_STOP_Setable
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_MCUDBGCR_DBG_ET1_STOP_Setable
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_MCUDBGCR_DBG_BT2_STOP_Setable
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_MCUDBGCR_DBG_BT1_STOP_Setable
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysClk_Gen
</UL>

<P><STRONG><a name="[118]"></a>SCU_MCUDBGCR_DBG_BT1_STOP_Setable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, fm33a0xx_scu.o(i.SCU_MCUDBGCR_DBG_BT1_STOP_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_Init
</UL>

<P><STRONG><a name="[117]"></a>SCU_MCUDBGCR_DBG_BT2_STOP_Setable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, fm33a0xx_scu.o(i.SCU_MCUDBGCR_DBG_BT2_STOP_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_Init
</UL>

<P><STRONG><a name="[116]"></a>SCU_MCUDBGCR_DBG_ET1_STOP_Setable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, fm33a0xx_scu.o(i.SCU_MCUDBGCR_DBG_ET1_STOP_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_Init
</UL>

<P><STRONG><a name="[115]"></a>SCU_MCUDBGCR_DBG_ET2_STOP_Setable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, fm33a0xx_scu.o(i.SCU_MCUDBGCR_DBG_ET2_STOP_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_Init
</UL>

<P><STRONG><a name="[114]"></a>SCU_MCUDBGCR_DBG_ET3_STOP_Setable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, fm33a0xx_scu.o(i.SCU_MCUDBGCR_DBG_ET3_STOP_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_Init
</UL>

<P><STRONG><a name="[113]"></a>SCU_MCUDBGCR_DBG_ET4_STOP_Setable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, fm33a0xx_scu.o(i.SCU_MCUDBGCR_DBG_ET4_STOP_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_Init
</UL>

<P><STRONG><a name="[112]"></a>SCU_MCUDBGCR_DBG_IWDT_STOP_Setable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, fm33a0xx_scu.o(i.SCU_MCUDBGCR_DBG_IWDT_STOP_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_Init
</UL>

<P><STRONG><a name="[111]"></a>SCU_MCUDBGCR_DBG_WWDT_STOP_Setable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, fm33a0xx_scu.o(i.SCU_MCUDBGCR_DBG_WWDT_STOP_Setable))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_Init
</UL>

<P><STRONG><a name="[f2]"></a>SdCmd</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, disp.o(i.SdCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SdCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLCDM
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_on
</UL>

<P><STRONG><a name="[f3]"></a>SdData</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, disp.o(i.SdData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SdData
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLCDM
</UL>

<P><STRONG><a name="[2a]"></a>SystemInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_fm33a0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33a0xx.o(.text)
</UL>
<P><STRONG><a name="[109]"></a>Test_ADC_ExVolt</STRONG> (Thumb, 172 bytes, Stack size 56 bytes, adc.o(i.Test_ADC_ExVolt))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Test_ADC_ExVolt &rArr; ANAC_ADC_VoltageCalc2 &rArr; ANAC_ADC_VoltageCalc &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalcInt2
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalcInt
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalc2
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalc
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCIF_ADC_IF_Clr
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCDATA_Read
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCCON_ADC_EN_Setable
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Wait_Finish
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init_TsetExVolt
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IO_Init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_ADC
</UL>

<P><STRONG><a name="[10a]"></a>Test_ADC_ExVolt2</STRONG> (Thumb, 172 bytes, Stack size 56 bytes, adc.o(i.Test_ADC_ExVolt2))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Test_ADC_ExVolt2 &rArr; ANAC_ADC_VoltageCalc2 &rArr; ANAC_ADC_VoltageCalc &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalcInt2
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalcInt
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalc2
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalc
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCIF_ADC_IF_Clr
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCDATA_Read
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCCON_ADC_EN_Setable
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Wait_Finish
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init_TsetExVolt2
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IO_Init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_ADC
</UL>

<P><STRONG><a name="[108]"></a>Test_ADC_Temperature</STRONG> (Thumb, 148 bytes, Stack size 56 bytes, adc.o(i.Test_ADC_Temperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Test_ADC_Temperature &rArr; ANAC_ADC_TemperatureCalc &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_TemperatureCalcInt
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_TemperatureCalc
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCIF_ADC_IF_Clr
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCDATA_Read
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADCCON_ADC_EN_Setable
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Wait_Finish
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init_TsetTemperature
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_ADC
</UL>

<P><STRONG><a name="[11b]"></a>Test_Etimx</STRONG> (Thumb, 282 bytes, Stack size 80 bytes, main.o(i.Test_Etimx))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Test_Etimx &rArr; ETIMx_Init &rArr; ETIMx_ETxINSEL_SIG2SEL_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PERCLK_SetableEx
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_Init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETIMx_ETxCR_CEN_Setable
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11f]"></a>Test_GPIO_InPut</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(i.Test_GPIO_InPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Test_GPIO_InPut &rArr; InputtIO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PERCLK_SetableEx
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputtIO
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[120]"></a>TicksDelay</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, user_init.o(i.TicksDelay))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TicksDelayUs
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TicksDelayMs
</UL>

<P><STRONG><a name="[e8]"></a>TicksDelayMs</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, user_init.o(i.TicksDelayMs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TicksDelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TicksDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLCDM
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_System
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_KEY
</UL>

<P><STRONG><a name="[121]"></a>TicksDelayUs</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, user_init.o(i.TicksDelayUs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TicksDelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TicksDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLCDM
</UL>

<P><STRONG><a name="[64]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, disp.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_Channel_SetEx
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Display
</UL>

<P><STRONG><a name="[f8]"></a>bcd_to_hex</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, disp.o(i.bcd_to_hex))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Display
</UL>

<P><STRONG><a name="[f7]"></a>dis_asc36</STRONG> (Thumb, 540 bytes, Stack size 24 bytes, disp.o(i.dis_asc36))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = dis_asc36 &rArr; show_asc36
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_asc36
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex2dec
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Display
</UL>

<P><STRONG><a name="[122]"></a>hex2dec</STRONG> (Thumb, 338 bytes, Stack size 16 bytes, disp.o(i.hex2dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hex2dec
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_asc36
</UL>

<P><STRONG><a name="[124]"></a>hz_seek12</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, disp.o(i.hz_seek12))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = hz_seek12
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_china12
</UL>

<P><STRONG><a name="[126]"></a>hz_seek14</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, disp.o(i.hz_seek14))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = hz_seek14
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_china14
</UL>

<P><STRONG><a name="[123]"></a>initLCDM</STRONG> (Thumb, 492 bytes, Stack size 8 bytes, disp.o(i.initLCDM))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = initLCDM &rArr; SdData
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdData
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCmd
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TicksDelayUs
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TicksDelayMs
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_Clr
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35]"></a>main</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = main &rArr; Run_ADC &rArr; Test_ADC_ExVolt2 &rArr; ANAC_ADC_VoltageCalc2 &rArr; ANAC_ADC_VoltageCalc &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLCDM
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_Temperature
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_ADC_ExVolt
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_on
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fulldisplay
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_System
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_Clr
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_GPIO_InPut
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Etimx
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_LED
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_KEY
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_DISPLAY
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run_ADC
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMER_PWM_DEMO_start
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMER_PWM_DEMO_init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[ed]"></a>show_asc36</STRONG> (Thumb, 422 bytes, Stack size 44 bytes, disp.o(i.show_asc36))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = show_asc36
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_asc36
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fulldisplay
</UL>

<P><STRONG><a name="[ee]"></a>show_china12</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, disp.o(i.show_china12))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = show_china12 &rArr; Lprint_hz12
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hz_seek12
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lprint_hz12
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fulldisplay
</UL>

<P><STRONG><a name="[ec]"></a>show_china14</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, disp.o(i.show_china14))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = show_china14 &rArr; hz_seek14
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hz_seek14
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lprint_hz14
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Display
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fulldisplay
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_TemperatureCalc
</UL>

<P><STRONG><a name="[128]"></a>_fadd</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_cfcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, flef.o(x$fpl$fleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalc
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_TemperatureCalc
</UL>

<P><STRONG><a name="[12a]"></a>_fcmple</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, flef.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[78]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalc2
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalc
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Display
</UL>

<P><STRONG><a name="[167]"></a>_fmul</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[70]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_VoltageCalc
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANAC_ADC_TemperatureCalc
</UL>

<P><STRONG><a name="[12b]"></a>_fsub</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[11c]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(i.NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Etimx
</UL>

<P><STRONG><a name="[11e]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Etimx
</UL>

<P><STRONG><a name="[11d]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Etimx
</UL>

<P><STRONG><a name="[e6]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, user_init.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysTick
</UL>

<P><STRONG><a name="[41]"></a>_dadd1</STRONG> (Thumb, 290 bytes, Stack size 20 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[40]"></a>_dsub1</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[12c]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
</UL>

<P><STRONG><a name="[129]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[54]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
